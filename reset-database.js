#!/usr/bin/env node

/**
 * üóëÔ∏è Script para resetar completamente o banco de dados
 * 
 * Este script remove TODOS os dados do banco MongoDB.
 * Use apenas quando quiser come√ßar do zero.
 * 
 * Uso: node reset-database.js
 */

require('dotenv').config({ path: '.env.local' });
const mongoose = require('mongoose');

const MONGODB_URI = process.env.MONGODB_URI;

if (!MONGODB_URI) {
  console.error('‚ùå MONGODB_URI n√£o encontrado no .env.local');
  console.log('üìã Crie o arquivo .env.local com:');
  console.log('MONGODB_URI=mongodb://localhost:27017/recanto-verde');
  process.exit(1);
}

async function connectDB() {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Conectado ao MongoDB com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro ao conectar ao MongoDB:', error);
    process.exit(1);
  }
}

async function resetDatabase() {
  console.log('üóëÔ∏è Resetando banco de dados...');
  
  try {
    const db = mongoose.connection.db;
    
    // Listar todas as cole√ß√µes
    const collections = await db.listCollections().toArray();
    
    if (collections.length === 0) {
      console.log('‚ÑπÔ∏è Banco de dados j√° est√° vazio');
      return;
    }
    
    console.log(`üìã Encontradas ${collections.length} cole√ß√µes:`);
    collections.forEach(col => console.log(`  - ${col.name}`));
    
    // Confirmar antes de deletar
    console.log('\n‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° DELETAR TODOS OS DADOS!');
    console.log('üíæ Certifique-se de fazer backup se necess√°rio.');
    
    // Em ambiente de produ√ß√£o, adicione uma confirma√ß√£o interativa aqui
    // Por simplicidade, vamos continuar automaticamente em desenvolvimento
    
    // Deletar todas as cole√ß√µes
    for (const collection of collections) {
      await db.collection(collection.name).drop();
      console.log(`üóëÔ∏è Cole√ß√£o '${collection.name}' removida`);
    }
    
    console.log('\n‚úÖ Banco de dados resetado com sucesso!');
    console.log('üöÄ O sistema agora est√° completamente limpo');
    console.log('üë§ Acesse o sistema e crie o primeiro usu√°rio recepcionista');
    
  } catch (error) {
    console.error('‚ùå Erro ao resetar banco de dados:', error);
  }
}

async function main() {
  console.log('üöÄ Iniciando reset do banco de dados...');
  console.log(`üîó Conectando em: ${MONGODB_URI.replace(/\/\/.*@/, '//***:***@')}`);
  
  await connectDB();
  await resetDatabase();
  
  await mongoose.disconnect();
  console.log('\n‚úÖ Desconectado do banco de dados');
  console.log('üéØ Reset conclu√≠do!');
}

main().catch(error => {
  console.error('‚ùå Erro na execu√ß√£o:', error);
  process.exit(1);
}); 